{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/SEO/SchemaOrg.js","webpack:///./src/components/SEO/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_config_website__WEBPACK_IMPORTED_MODULE_3__","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_4__","Container","styled","div","withConfig","displayName","componentId","Title","h1","Content","p","Action","Link","theme","primaryColor","NotFound","a","createElement","to","SchemaOrg","_ref","canonicalUrl","datePublished","defaultTitle","description","image","isCreativeWork","title","url","baseSchema","@context","@type","name","alternateName","schema","concat","itemListElement","position","item","@id","headline","mainEntityOfPage","react_default","Helmet_default","type","JSON","stringify","SEO","meta","isProject","gatsby_browser_entry","query","render","_ref2","seo","site","siteMetadata","pageMeta","slug","Fragment","content","property","SEO_SchemaOrg","data","_3622487546","propTypes","PropTypes","bool","any","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-466320474b241626c517.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\"\nimport { theme } from '../../config/website'\nimport SEO from \"../components/SEO/SEO\"\n\nconst Container = styled.div``\n\nconst Title = styled.h1`\n    margin-bottom: 16px;\n    font-weight: normal;\n`\n\nconst Content = styled.p``\n\nconst Action = styled(Link)`\n    cursor: pointer;\n    text-decoration: underline;\n    font-family: 'Bariol-Bold';\n    color: ${theme.primaryColor};\n\n    :hover, :active {\n        color: inherit;\n    }\n`\n\nconst NotFound = () => {\n  return (\n    <Container>\n      <SEO />\n      <Title>Sorry!</Title>\n      <Content>That page or resource could not be found.</Content>\n      <Action to=\"/\">Return home</Action>\n    </Container>\n  )\n}\n\nexport default NotFound","/*\nMIT License\n\nCopyright (c) 2017 Jason Lengstorf\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nconst SchemaOrg =\n  ({\n    canonicalUrl,\n    datePublished,\n    defaultTitle,\n    description,\n    image,\n    isCreativeWork,\n    title,\n    url,\n  }) => {\n    const baseSchema = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url,\n        name: title,\n        alternateName: defaultTitle,\n      },\n    ];\n\n    const schema = isCreativeWork\n      ? [\n          ...baseSchema,\n          {\n            '@context': 'http://schema.org',\n            '@type': 'BreadcrumbList',\n            itemListElement: [\n              {\n                '@type': 'ListItem',\n                position: 1,\n                item: {\n                  '@id': url,\n                  name: title,\n                  image,\n                },\n              },\n            ],\n          },\n          {\n            '@context': 'http://schema.org',\n            '@type': 'CreativeWork',\n            url,\n            name: title,\n            alternateName: defaultTitle,\n            headline: title,\n            image: {\n              '@type': 'ImageObject',\n              url: image,\n            },\n            description,\n            mainEntityOfPage: {\n              '@type': 'WebSite',\n              '@id': canonicalUrl,\n            },\n            datePublished,\n          },\n        ]\n      : baseSchema;\n\n    return (\n      <Helmet>\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\n      </Helmet>\n    );\n  };\n\nexport default SchemaOrg","/*\nMIT License\n\nCopyright (c) 2017 Jason Lengstorf\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\nimport SchemaOrg from './SchemaOrg';\nimport PropTypes from 'prop-types';\n\nconst SEO = ({ meta, isProject }) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n            description\n            canonicalUrl\n            image\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata: seo } }) => {\n      const pageMeta = meta || {};\n\n      const title = pageMeta.title ? `${seo.title} | ${pageMeta.title}` : seo.title;\n      const description = pageMeta.description || seo.description;\n      const image = pageMeta.image ? `${seo.canonicalUrl}${pageMeta.image}` : seo.image;\n      const url = pageMeta.slug ? `${seo.canonicalUrl}/${pageMeta.slug}` : seo.canonicalUrl;\n      const datePublished = isProject ? pageMeta.datePublished : false;\n\n      return (\n        <React.Fragment>\n          <Helmet>\n            {/* General tags */}\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <meta name=\"image\" content={image} />\n\n            {/* OpenGraph tags */}\n            <meta property=\"og:url\" content={url} />\n            {isProject ? <meta property=\"og:type\" content=\"article\" /> : null}\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:image\" content={image} />\n          </Helmet>\n          <SchemaOrg\n            isCreativeWork={isProject}\n            url={url}\n            title={title}\n            image={image}\n            description={description}\n            datePublished={datePublished}\n            canonicalUrl={seo.canonicalUrl}\n            defaultTitle={seo.defaultTitle}\n          />\n        </React.Fragment>\n      );\n    }}\n  />\n);\n\nSEO.propTypes = {\n  isProject: PropTypes.bool,\n  meta: PropTypes.any\n};\n\nSEO.defaultProps = {\n  isProject: false,\n  meta: {},\n};\n\nexport default SEO"],"sourceRoot":""}